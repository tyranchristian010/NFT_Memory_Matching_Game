{"ast":null,"code":"import _toConsumableArray from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport MemoryToken from '../abis/MemoryToken.json';\nimport './App.css';\nvar CARD_ARRAY = [{\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}, {\n  name: 'fries',\n  img: '/images/fries.png'\n}, {\n  name: 'cheeseburger',\n  img: '/images/cheeseburger.png'\n}, {\n  name: 'ice-cream',\n  img: '/images/ice-cream.png'\n}, {\n  name: 'pizza',\n  img: '/images/pizza.png'\n}, {\n  name: 'milkshake',\n  img: '/images/milkshake.png'\n}, {\n  name: 'hotdog',\n  img: '/images/hotdog.png'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                this.setState({\n                  cardArray: CARD_ARRAY.sort(function () {\n                    return 0.5 - Math.random();\n                  })\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, memoryTokenData, memoryToken, totalSupply, balanceOf, i, id, tokenURI;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                // Load MemoryToken.sol\n                memoryTokenData = MemoryToken.networks[networkId];\n\n                if (!memoryTokenData) {\n                  _context2.next = 33;\n                  break;\n                }\n\n                memoryToken = new web3.eth.Contract(MemoryToken.abi, memoryTokenData.address);\n                this.setState({\n                  memoryToken: memoryToken\n                });\n                _context2.next = 14;\n                return memoryToken.methods.totalSupply().call();\n\n              case 14:\n                totalSupply = _context2.sent;\n                this.setState({\n                  totalSupply: totalSupply.toString()\n                }); // Load Tokens\n\n                _context2.next = 18;\n                return memoryToken.methods.balanceOf(accounts[0]).call();\n\n              case 18:\n                balanceOf = _context2.sent;\n                i = 0;\n\n              case 20:\n                if (!(i < balanceOf)) {\n                  _context2.next = 31;\n                  break;\n                }\n\n                _context2.next = 23;\n                return memoryToken.methods.tokenOfOwnerByIndex(accounts[0], i).call();\n\n              case 23:\n                id = _context2.sent;\n                _context2.next = 26;\n                return memoryToken.methods.tokenURI(id).call();\n\n              case 26:\n                tokenURI = _context2.sent;\n                this.setState({\n                  tokenURIs: [].concat(_toConsumableArray(this.state.tokenURIs), [tokenURI])\n                });\n\n              case 28:\n                i++;\n                _context2.next = 20;\n                break;\n\n              case 31:\n                _context2.next = 34;\n                break;\n\n              case 33:\n                window.alert('MemoryToken contract not deployed to detected network.');\n\n              case 34:\n                console.log(this.state.memoryToken);\n\n              case 35:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.chooseImage = function (cardId) {\n      cardId = cardId.toString();\n      return window.location.origin + '/images/blank.png';\n    };\n\n    _this.flipCard =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(cardId) {\n        var alreadyChosen;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                alreadyChosen = _this.state.cardsChosen.length;\n\n                _this.setState({\n                  cardsChosen: [].concat(_toConsumableArray(_this.state.cardsChosen), [_this.state.cardArray[cardId].name]),\n                  cardsChosenId: [].concat(_toConsumableArray(_this.state.cardsChosenId), [cardId])\n                });\n\n                if (alreadyChosen === 1) {\n                  setTimeout(_this.checkForMatch, 100);\n                }\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.checkForMatch =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var optionOneId, optionTwoId;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              optionOneId = _this.state.cardsChosenId[0];\n              optionTwoId = _this.state.cardsChosenId[1];\n\n              if (optionOneId == optionTwoId) {\n                alert('You have clicked the same image!');\n              } else if (_this.state.cardsChosen[0] === _this.state.cardsChosen[1]) {\n                alert('You found a match');\n\n                _this.state.memoryToken.methods.mint(_this.state.account, window.location.origin + CARD_ARRAY[optionOneId].img.toString()).send({\n                  from: _this.state.account\n                }).on('transactionHash', function (hash) {\n                  _this.setState({\n                    cardsWon: [].concat(_toConsumableArray(_this.state.cardsWon), [optionOneId, optionTwoId]),\n                    tokenURIs: [].concat(_toConsumableArray(_this.state.tokenURIs), [CARD_ARRAY[optionOneId].img])\n                  });\n                });\n              } else {\n                alert('Sorry, try again');\n              }\n\n              _this.setState({\n                cardsChosen: [],\n                cardsChosenId: []\n              });\n\n              if (_this.state.cardsWon.length === CARD_ARRAY.length) {\n                alert('Congratulations! You found them all!');\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    _this.state = {\n      account: '',\n      memoryToken: {},\n      totalSupply: 0,\n      tokenURIs: [],\n      cardArray: [],\n      cardsChosen: [],\n      cardsChosenId: [],\n      cardsWon: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"\\uD83E\\uDDE0 MemorETH Matching Game\"), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowrap d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.account))))), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"d-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Start matching now!\"), React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, this.state.cardArray.map(function (card, key) {\n        return React.createElement(\"img\", {\n          key: key,\n          src: _this2.chooseImage(key),\n          \"data-id\": key,\n          onClick: function onClick(event) {\n            var cardId = event.target.getAttribute('data-id');\n\n            if (!_this2.state.cardsWon.includes(cardId.toString())) {\n              _this2.flipCard(cardId);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/Desktop/GITHUB2021/Eth_memory_match_game/src/components/App.js"],"names":["React","Component","Web3","MemoryToken","CARD_ARRAY","name","img","App","loadWeb3","loadBlockchainData","setState","cardArray","sort","Math","random","web3","window","eth","getAccounts","accounts","account","net","getId","networkId","memoryTokenData","networks","memoryToken","Contract","abi","address","methods","totalSupply","call","toString","balanceOf","i","tokenOfOwnerByIndex","id","tokenURI","tokenURIs","state","alert","console","log","ethereum","enable","currentProvider","props","chooseImage","cardId","location","origin","flipCard","alreadyChosen","cardsChosen","length","cardsChosenId","setTimeout","checkForMatch","optionOneId","optionTwoId","mint","send","from","on","hash","cardsWon","map","card","key","event","target","getAttribute","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport MemoryToken from '../abis/MemoryToken.json'\nimport './App.css';\n\nconst CARD_ARRAY = [\n  {\n    name: 'fries',\n    img: '/images/fries.png'\n  },\n  {\n    name: 'cheeseburger',\n    img: '/images/cheeseburger.png'\n  },\n  {\n    name: 'ice-cream',\n    img: '/images/ice-cream.png'\n  },\n  {\n    name: 'pizza',\n    img: '/images/pizza.png'\n  },\n  {\n    name: 'milkshake',\n    img: '/images/milkshake.png'\n  },\n  {\n    name: 'hotdog',\n    img: '/images/hotdog.png'\n  },\n  {\n    name: 'fries',\n    img: '/images/fries.png'\n  },\n  {\n    name: 'cheeseburger',\n    img: '/images/cheeseburger.png'\n  },\n  {\n    name: 'ice-cream',\n    img: '/images/ice-cream.png'\n  },\n  {\n    name: 'pizza',\n    img: '/images/pizza.png'\n  },\n  {\n    name: 'milkshake',\n    img: '/images/milkshake.png'\n  },\n  {\n    name: 'hotdog',\n    img: '/images/hotdog.png'\n  }\n]\n\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    this.setState({cardArray: CARD_ARRAY.sort(()=>0.5-Math.random())})\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n\n    // Load MemoryToken.sol\n    const memoryTokenData = MemoryToken.networks[networkId]\n    if(memoryTokenData) {\n      const memoryToken = new web3.eth.Contract(MemoryToken.abi, memoryTokenData.address)\n      this.setState({ memoryToken })\n      let totalSupply = await memoryToken.methods.totalSupply().call()\n      this.setState({totalSupply: totalSupply.toString() })\n      \n      // Load Tokens\n      let balanceOf = await memoryToken.methods.balanceOf(accounts[0]).call()\n      for (let i = 0; i < balanceOf; i++) {\n        let id = await memoryToken.methods.tokenOfOwnerByIndex(accounts[0], i).call()\n        let tokenURI = await memoryToken.methods.tokenURI(id).call()\n        this.setState({\n          tokenURIs: [...this.state.tokenURIs, tokenURI]\n        })\n      }\n\n    } else {\n      window.alert('MemoryToken contract not deployed to detected network.')\n    }\n    console.log(this.state.memoryToken)\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n  chooseImage = (cardId) => {\n    cardId = cardId.toString()\n      return window.location.origin + '/images/blank.png'\n  }\n\n  flipCard = async (cardId) => {\n    let alreadyChosen = this.state.cardsChosen.length\n\n    this.setState({\n      cardsChosen: [...this.state.cardsChosen, this.state.cardArray[cardId].name],\n      cardsChosenId: [...this.state.cardsChosenId, cardId]\n    })\n\n    if (alreadyChosen === 1) {\n      setTimeout(this.checkForMatch, 100)\n    }\n  }\n\n\n  checkForMatch = async () => {\n    const optionOneId = this.state.cardsChosenId[0]\n    const optionTwoId = this.state.cardsChosenId[1]\n\n    if(optionOneId == optionTwoId) {\n      alert('You have clicked the same image!')\n    } else if (this.state.cardsChosen[0] === this.state.cardsChosen[1]) {\n      alert('You found a match')\n      this.state.memoryToken.methods.mint(\n        this.state.account,\n        window.location.origin + CARD_ARRAY[optionOneId].img.toString()\n      )\n      .send({ from: this.state.account })\n      .on('transactionHash', (hash) => {\n        this.setState({\n          cardsWon: [...this.state.cardsWon, optionOneId, optionTwoId],\n          tokenURIs: [...this.state.tokenURIs, CARD_ARRAY[optionOneId].img]\n        })\n      })\n    } else {\n      alert('Sorry, try again')\n    }\n    this.setState({\n      cardsChosen: [],\n      cardsChosenId: []\n    })\n    if (this.state.cardsWon.length === CARD_ARRAY.length) {\n      alert('Congratulations! You found them all!')\n    }\n  }\n\n  constructor(props){\n    \n    super(props)\n      this.state={\n          account:'',\n          memoryToken: {},\n          totalSupply:0,\n          tokenURIs:[],\n          cardArray:[],\n          cardsChosen:[],\n          cardsChosenId:[],\n          cardsWon:[]\n  }\n}\n\n\n\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            🧠 MemorETH Matching Game\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-muted\"><span id=\"account\">{this.state.account}</span></small>\n            </li>\n          </ul>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <h1 className=\"d-4\">Start matching now!</h1>\n\n                <div className=\"grid mb-4\" >\n\n                { this.state.cardArray.map((card, key) => {\n                    return(\n                      <img\n                        key={key}\n                        src={this.chooseImage(key)}\n                        data-id={key}\n                        onClick={(event) => {\n                          let cardId = event.target.getAttribute('data-id')\n                          if(!this.state.cardsWon.includes(cardId.toString())) {\n                            this.flipCard(cardId)\n                          }\n                        }}\n                      />\n                    )\n                  })}\n\n                </div>\n\n                <div>\n\n                 \n\n                  <div className=\"grid mb-4\" >\n\n                  {            }\n\n                  </div>\n\n                </div>\n\n              </div>\n\n            </main>\n          </div>\n        </div>\n      \n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}